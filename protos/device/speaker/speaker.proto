syntax = "proto3";

option go_package  = "diyorbek.speaker.v1;speaker1";

service SpeakerService {
  rpc AddSpeaker(AddSpeakerReq) returns (SpeakerStatusMessage);
  rpc AddChannel(AddChannelReq) returns (SpeakerStatusMessage);
  rpc GetUserChannel(GetUserChannelReq) returns (GetUserChannelRes);
  rpc DeleteChannel(DeleteChannelReq) returns (SpeakerStatusMessage);
  rpc DownOrUpVolume(DownOrUpVolumeReq) returns (DownOrUpVolumeRes);
  rpc PreviousAndNext(PreviousAndNextReq) returns (PreviousAndNextRes);
  rpc OnAndOffUserSpeaker(OnAndOffUserSpeakerReq) returns (OnAndOffUserSpeakerRes);
}

message OnAndOffUserSpeakerReq {
  string user_id = 1;
  bool on = 2;
  bool off = 3;
}
message OnAndOffUserSpeakerRes {
  string message = 1;
}

message Channel {
  string channel_name = 1;
  string channel_number = 2;
}

message GetUserChannelRes {
  repeated Channel channels = 1;
  int64 count = 2;
}

message AddSpeakerReq {
  string user_id = 1;
  string model_name = 2;
}

message SpeakerStatusMessage {
  bool successfully = 1;
}

message AddChannelReq {
  string user_id = 1;
  string channel_name = 2;
}
message GetUserChannelReq {
  string user_id = 1;
  string channel_name = 2;
}

message DeleteChannelReq {
  string user_id = 1;
  string channel_name = 2;
}
message DownOrUpVolumeReq {
  string user_id = 1;
  bool down = 2;
  bool up = 3;
}
message DownOrUpVolumeRes {
  int64 sound = 1;
}

message PreviousAndNextReq {
  string user_id = 1;
  bool next = 2;
  bool back = 3;
}

message PreviousAndNextRes {
  Channel channel = 1;
}
