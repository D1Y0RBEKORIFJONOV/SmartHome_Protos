syntax = "proto3";

option  go_package  = "diyorbek.user.v1;user1";

service  UserService  {
  rpc CreateUser(CreateUSerReq)returns (StatusUser);
  rpc Login(LoginReq) returns (LoginRes);
  rpc UpdateUser(UpdateUserReq)returns (StatusUser);
  rpc UpdatePassword(UpdatePasswordReq)returns (StatusUser);
  rpc UpdateEmail(UpdateEmailReq) returns (StatusUser);
  rpc GetUser(GetUserReq)returns(User);
  rpc GetAllUser(GetAllUserReq)returns (GetAllUserRes);
  rpc DeleteUser(DeleteUserReq) returns (StatusUser);
}

message DeleteUserReq {
  string  user_id = 1;
  bool is_hard_delete = 2;
}

message  GetAllUserReq {
  string filed = 1;
  string value = 2;
  int64 page = 3;
  int64 limit = 4;
}

message GetAllUserRes  {
  repeated User users = 1;
  int32  count = 2;
}

message GetUserReq {
  string filed = 1;
  string  value = 2;
}

message UpdateUserReq {
  string user_id = 1;
  string first_name = 2;
  string  last_name = 3;
}
message  UpdatePasswordReq {
  string user_id = 1;
  string password = 2;
  string new_password = 3;
}

message UpdateEmailReq {
  string user_id = 1;
  string  new_email = 2;
}

message LoginReq {
  string  email = 1;
  string  password = 2;
}

message  Token {
  string access_token  = 1;
  string  refresh_token = 2;
}

message LoginRes {
  Token tokens = 1;
}

message  StatusUser {
  bool successfully = 1;
}
message Profile {
  string first_name = 1;
  string created_at  = 2;
  string updated_at = 3;
  string deleted_at = 4;
  string  address = 5;
}
message User {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string password = 4;
  string id = 5;
  Profile profile  = 6;
}

message CreateUSerReq {
  string  first_name = 1;
  string  last_name = 2;
  string  email = 3;
  string  password = 4;
  string  address  = 5;
}

